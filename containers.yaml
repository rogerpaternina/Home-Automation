version: "3.8"
services:
  battery2mqtt:
    image: sthopeless/battery2mqtt:latest
    environment:
      - MQTT_HOST=192.168.3.37
      - MQTT_PORT=1883
      - MQTT_USER=
      - MQTT_PASSWORD=
      - MQTT_TOPIC=battery2mqtt
      - MQTT_QOS=1
      - INTERVAL=60
      - MONITORED_CONDITIONS=status,capacity,energy_now,energy_full,energy_full_design,power_now,voltage_now
      - BATTERY_HEALTH=1
      - TIME_REMAINING=1
      - SHOW_UNITS=1
      - AC_ADAPTER=1
      - LOG_LEVEL=info
    volumes:
      - /sys/class/power_supply:/sys/class/power_supply:ro
    restart: unless-stopped
  
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./hass:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host  

  homebridge:
    image: oznu/homebridge:ubuntu
    container_name: homebridge
    restart: unless-stopped
    network_mode: host
    environment:
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
    volumes:
      - ./homebridge:/homebridge
      
  node-red:
    image: nodered/node-red:latest
    environment:
      - TZ=Europe/Amsterdam
    ports:
      - "1880:1880"
    volumes:
      - /rapsnodered:/data
    network_mode: host      
      scrypted:
        image: koush/scrypted
        container_name: scrypted
        restart: unless-stopped
        network_mode: host
        volumes:
            - ~/.scrypted/volume:/server/volume
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "10"

    # watchtower manages auto updates. this is optional.
    watchtower:
        image: containrrr/watchtower
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        # check for updates once an hour (interval is in seconds)
        command: --interval 3600 --cleanup
        
  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    restart: unless-stopped
    volumes:
      - ./data:/app/data
      - /run/udev:/run/udev:ro
    ports:
      # Frontend port
      - 8080:8080
    environment:
      - TZ=Europe/Berlin
    devices:
      # Make sure this matched your adapter location
      - /dev/ttyUSB0:/dev/ttyACM0

  zwavejsui:
    container_name: zwavejsui
    image: zwavejs/zwave-js-ui:latest
    restart: unless-stopped
    devices:
      - '/dev/serial/by-id/usb-Silicon_Labs_Zooz_ZST10_700_Z-Wave_Stick_da71393558ccec11ad553fb77b8007ef-if00-port0:/dev/zwave'
    volumes:
      - "/home/deb/zwavejsui:/usr/src/app/store"
    ports:
      - "3000:3000"
      - "8091:8091"

  mqtt:
    container_name: mosquitto
    image: eclipse-mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - /docker/mosquitto/config:/mosquitto/config
      - /docker/mosquitto/logs:/mosquitto/log
      - /docker/mosquitto/data:/mosquitto/data
    restart: always
    environment:
      - TZ=Europe/Madrid 

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdallrp2
    volumes:
      - /home/user/appdata/heimdall:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    ports:
      - 82:80
      - 444:443
    restart: unless-stopped


    wyze-bridge:
        container_name: wyze-bridge
        restart: unless-stopped
        image: mrlt8/wyze-bridge:latest
        ports:
            - 1935:1935 # RTMP
            - 8554:8554 # RTSP
            - 8888:8888 # HLS
            - 8889:8889 #WebRTC
            - 8189:8189/udp # WebRTC/ICE
            - 5000:5000 # WEB-UI
        environment:
            # [REQUIRED] Fill the following two lines:
            - WYZE_EMAIL=
            - WYZE_PASSWORD= 
            # [OPTIONAL] IP Address of the host to enable WebRTC e.g.,:
            # - WB_IP=192.168.1.122
